int lexanAnalyzer(){
    
    FILE *fp;
    char c;
    fp = fopen("test.txt", "r");

    //create table
    Table symboltable = createTable(NULL, NULL, 0);

    if(fp == NULL){

        printf("ERROR!\n");

    }
    //count line number 
    int count = 0;
    int pos = 0;

    while( (c = getc(fp)) != EOF)
    {
        if(c == '~')
        {
            char *line = malloc(10000);
            getComment(c,fp,line);
            count++;
        }
        else if(c == '\n'){
            count++;
        }
        else if(isCharNull(c)) //if c is a space or tab
        {
            //do nothing
        }else if (c == '\n') // if c is a new line, increase line number 
        {
            count ++;

        }else if(isdigit(c)) //if c is a digit
        {
            /*
            * get the number into numLexeme
            */

            //return NUM;

        }else if(isalpha(c)) //if c is a letter 
        {
            //get identiferier into value
            char* word = malloc(50);
            getWord(c,fp,word);

            Row newRow = createRow(pos, word, ID, NULL);

            if(!isRowExist(symboltable, newRow))
            {
                insertRow(symboltable, pos, word, ID);
                pos++;
            }else if(strcmp(word,"begin"))
            {
                printf("begin\n");
                return BEGIN;

            }else if(strcmp(word,"end"))
            {
                printf("end\n");
                return END;
            }
        }
     }
     
    //close file    
    fclose(fp);
    
    displayTable(symboltable);

    return 0;
}